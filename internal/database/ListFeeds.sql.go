// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: ListFeeds.sql

package database

import (
	"context"
)

const listFeeds = `-- name: ListFeeds :many
SELECT feeds.name as feed_name, feeds.url, users.name
FROM feeds
JOIN users ON feeds.user_id = users.id
`

type ListFeedsRow struct {
	FeedName string
	Url      string
	Name     string
}

func (q *Queries) ListFeeds(ctx context.Context) ([]ListFeedsRow, error) {
	rows, err := q.db.QueryContext(ctx, listFeeds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListFeedsRow
	for rows.Next() {
		var i ListFeedsRow
		if err := rows.Scan(&i.FeedName, &i.Url, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
